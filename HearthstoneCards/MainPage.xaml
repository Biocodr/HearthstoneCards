<local:BasePage
    x:Class="HearthstoneCards.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:HearthstoneCards"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    Background="{StaticResource PhoneBackgroundBrush}">
    
    <Hub>
        <!-- FILTER -->
        <HubSection>
            <DataTemplate>
                <ScrollViewer>
                    <StackPanel Margin="0,22,0,0">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <StackPanel 
                                Orientation="Horizontal">
                                <TextBlock
                                    Text="Results: "
                                    Style="{StaticResource Tk-BodyBigSized}"/>
                                <TextBlock
                                    Margin="10,0,0,0"
                                    Text="{Binding ResultsCount}"
                                    Style="{StaticResource Tk-BodyBigSized}"/>
                            </StackPanel>
                        </Grid>
                        <!-- Text Filter -->
                        <TextBox
                            Header="Text"
                            PlaceholderText="Search name or description..."
                            SelectionChanged="TextFilterTextBox_OnSelectionChanged"
                            GotFocus="TextBox_SelectAll_OnLGotFocus"
                            Loaded="TextBox_OnLoaded"/>
                        <!-- Class Filter -->
                        <local:MultiComboBox
                            Header="Class"
                            Options="{Binding ClassOptions}"
                            ItemTemplate="{StaticResource ClassOptionItemTemplate}"
                            ItemContainerStyle="{StaticResource SelectionListViewItemStyle}"
                            SelectionChanged="MultiSelector_OnSelectionChanged"/>
                        <!-- Set Filter -->
                        <local:MultiComboBox
                            Header="Set"
                            Options="{Binding SetOptions}"
                            ItemTemplate="{StaticResource SetOptionItemTemplate}"
                            ItemContainerStyle="{StaticResource SelectionListViewItemStyle}"
                            SelectionChanged="MultiSelector_OnSelectionChanged"/>
                        <!-- Rarity Filter -->
                        <local:MultiComboBox
                            Header="Rarity"
                            Options="{Binding RarityOptions}"
                            ItemTemplate="{StaticResource RarityOptionItemTemplate}"
                            ItemContainerStyle="{StaticResource SelectionListViewItemStyle}"
                            SelectionChanged="MultiSelector_OnSelectionChanged"/>
                        <!-- Mechanics Filter -->
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <local:MultiComboBox
                                Grid.Column="0"
                                Grid.ColumnSpan="2"
                                Grid.Row="0"
                                Header="Mechanics"
                                Options="{Binding MechanicOptions}"
                                ItemTemplate="{StaticResource MechanicOptionItemTemplate}"
                                ItemContainerStyle="{StaticResource SelectionListViewItemStyle}"
                                SelectionChanged="MultiSelector_OnSelectionChanged"/>
                            <CheckBox
                                Grid.Column="0"
                                Grid.Row="1"
                                Style="{StaticResource Tk-AccentColouredCheckBoxStyle}"
                                Content="Any"
                                IsChecked="{Binding IsAnyMechanicsChecked, Mode=TwoWay}"
                                Checked="MechanicsCheckbox_OnChecked"
                                Unchecked="MechanicsCheckbox_OnChecked"/>
                            <CheckBox
                                Grid.Column="1"
                                Grid.Row="1"
                                Style="{StaticResource Tk-AccentColouredCheckBoxStyle}"
                                Content="All"
                                IsChecked="{Binding IsAnyMechanicsChecked, Converter={StaticResource InverseBooleanConverter}, Mode=TwoWay}"/>

                        </Grid>
                        <!-- Attack Filter -->
                        <local:RangeBox
                            Title="Attack"
                            Min="{Binding Variables.MinAttack}"
                            Max="{Binding Variables.MaxAttack}"
                            From="{Binding SelectedAttackFromOption, Mode=TwoWay}"
                            To="{Binding SelectedAttackToOption, Mode=TwoWay}"
                            IsRangeBoxEnabled="{Binding IsAttackFilterEnabled}"
                            IsCheckedChanged="AttackRangeBox_OnIsCheckedChanged"
                            RangeValueChanged="RangeBox_OnRangeValueChanged"/>
                        <!-- Cost Filter -->
                        <local:RangeBox
                            Title="Cost"
                            Min="{Binding Variables.MinCost}"
                            Max="{Binding Variables.MaxCost}"
                            From="{Binding SelectedCostFromOption, Mode=TwoWay}"
                            To="{Binding SelectedCostToOption, Mode=TwoWay}"
                            IsRangeBoxEnabled="{Binding IsCostFilterEnabled}"
                            IsCheckedChanged="CostRangeBox_OnIsCheckedChanged"
                            RangeValueChanged="RangeBox_OnRangeValueChanged"/>
                    </StackPanel>
                </ScrollViewer>
            </DataTemplate>
        </HubSection>
        <!-- RESULTS -->
        <HubSection>
            <DataTemplate>
                <Grid
                    Margin="0,0,12,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    
                    <!-- Controls -->
                    <Button
                        Grid.Row="0"
                        Grid.Column="0"
                        Style="{StaticResource Hs-BorderlessButton}"
                        HorizontalAlignment="Stretch"
                        Click="SorterButton_OnClick">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TextBlock
                                Grid.Column="0"
                                Grid.Row="0"
                                Style="{StaticResource Tk-BodyBigSized}"
                                FontWeight="Bold"
                                Text="{Binding SelectedSortOption.Key, Converter={StaticResource ToUpperCaseConverter}}"
                                Foreground="Gray"/>
                            <TextBlock
                                Grid.Column="0"
                                Grid.Row="1"
                                Style="{StaticResource Tk-BodyBigSized}"
                                Text="{Binding IsSortedAscending, Converter={StaticResource SortDirectionToStringConverter}}"
                                Foreground="Gray"/>
                            <Path
                                Grid.Column="1"
                                Grid.Row="0"
                                Margin="5"
		                        Stretch="Fill"
		                        Width="20"
		                        Height="12"
		                        Fill="Gray"
		                        Data="F1 M 37.8516,39.5833L 52.1016,24.9375L 52.1016,35.2292L 37.8516,50.2708L 23.6016,35.2292L 23.6016,24.9375L 37.8516,39.5833 Z"/>
                        </Grid>
                    </Button>
                    <!-- ItemsPanelTemplate Button -->
                    <Button
                        Grid.Row="0"
                        Grid.Column="1"
                        Style="{StaticResource Hs-RoundIconButtonStyle}"
                        BorderBrush="{StaticResource PhoneAccentBrush}"
                        Click="ItemsPanelTemplateButton_OnClick">
                        <local:Icon
                            IconTemplate="{StaticResource ListIconControlTemplate}"
                            Color="{StaticResource PhoneForegroundBrush}"/>
                        <FlyoutBase.AttachedFlyout>
                            <MenuFlyout>
                                <MenuFlyoutItem
                                    Text="visual"
                                    Command="{Binding ChangeViewInfoCommand}"
                                    CommandParameter="{StaticResource VisualsListViewInfo}"/>
                                <MenuFlyoutItem
                                    Text="images"
                                    Command="{Binding ChangeViewInfoCommand}"
                                    CommandParameter="{StaticResource ImagesViewInfo}"/>
                                <MenuFlyoutItem
                                    Text="table"
                                    Command="{Binding ChangeViewInfoCommand}"
                                    CommandParameter="{StaticResource TableViewInfo}"/>
                            </MenuFlyout>
                        </FlyoutBase.AttachedFlyout>
                    </Button>

                    <!-- Result View -->       
                    <ListView
                        Grid.Row="1"
                        Grid.Column="0"
                        Grid.ColumnSpan="2"
                        Margin="0,20,0,0"
                        Style="{StaticResource Tk-FullWidthItemsControlStyle}"
                        ItemsSource="{Binding PresentedCards}"
                        ItemTemplate="{Binding ItemsControlViewInfo.ItemTemplate}"
                        ItemsPanel="{Binding ItemsControlViewInfo.ItemsPanelTemplate}"
                        IsItemClickEnabled="True"
                        ItemClick="CardList_OnItemClick"/>
                    <!-- Empty Result Message -->
                    <TextBlock
                        Grid.Row="1"
                        Grid.Column="0"
                        Grid.ColumnSpan="2"
                        Margin="0,10,0,0"
                        HorizontalAlignment="Left"
                        Visibility="{Binding IsResultEmpty, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Span>No cards found.<LineBreak/>Adapt your filter options.</Span> 
                    </TextBlock>
                    
                    <!-- Sorting Overlay -->
                    <Grid
                        Grid.Row="1"
                        Grid.Column="0"
                        Grid.ColumnSpan="2"
                        Background="{StaticResource PhoneBackgroundBrush}"
                        Opacity="0.9"
                        Visibility="{Binding IsSortingControlVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <!-- Sort Options -->
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <ListView
                            Grid.Row="0"
                            Grid.Column="0"
                            Grid.ColumnSpan="2"
                            Margin="0,0,0,10"
                            Style="{StaticResource Tk-FullWidthItemsControlStyle}"
                            ItemsSource="{Binding SortOptions}"
                            IsItemClickEnabled="True"
                            ItemClick="SortConfigurationElement_OnClicked">
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <RadioButton
                                        HorizontalAlignment="Stretch"
                                        GroupName="sortOptionsGroup"
                                        Style="{StaticResource ShowbroRadioButtonStyle}"
                                        Content="{Binding Key}"
                                        IsChecked="{Binding IsSelected, Mode=TwoWay}"
                                        Click="SortConfigurationElement_OnClicked"/>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                        <ToggleButton
                            Grid.Row="1"
                            Grid.Column="0"
                            Margin="0,0,5,10"
                            Style="{StaticResource BorderlessToggleButtonStyle}"
                            Content="Ascending"
                            IsChecked="{Binding IsSortedAscending, Mode=TwoWay}"
                            Click="SortConfigurationElement_OnClicked"/>
                        <ToggleButton
                            Grid.Row="1"
                            Grid.Column="1"
                            Margin="5,0,0,10"
                            Style="{StaticResource BorderlessToggleButtonStyle}"
                            Content="Descending"
                            IsChecked="{Binding IsSortedAscending, Mode=TwoWay, Converter={StaticResource InverseBooleanConverter}}"
                            Click="SortConfigurationElement_OnClicked"/>
                        <Button
                            Grid.Row="2"
                            Grid.Column="0"
                            Grid.ColumnSpan="2"
                            Margin="0,0,0,10"
                            Height="70"
                            Content="Done"
                            Style="{StaticResource Hs-ButtonStyle}"
                            HorizontalAlignment="Stretch"
                            Click="ApplySortButton_OnClick"/>
                    </Grid>
                </Grid>
            </DataTemplate>
        </HubSection>
    </Hub>
    
    <Page.BottomAppBar>
        <CommandBar 
            Foreground="{StaticResource PhoneBackgroundBrush}"
            ClosedDisplayMode="Minimal">
            <CommandBar.Background>
                <SolidColorBrush Color="{StaticResource PhoneForegroundColor}" Opacity="0.4"/>
            </CommandBar.Background>
            <!--<CommandBar.PrimaryCommands>
                <AppBarButton Label="about"/>
            </CommandBar.PrimaryCommands>-->
            <CommandBar.SecondaryCommands>
                <AppBarButton Label="about" Click="AboutAppBarButton_OnClick"/>
            </CommandBar.SecondaryCommands>
        </CommandBar>
    </Page.BottomAppBar>
</local:BasePage>
